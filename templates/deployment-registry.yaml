{{- if .Values.registry.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apicurio-registry.name" . }}
  labels:
    {{- include "apicurio-registry.labels" . | nindent 4 }}
    {{- with .Values.registry.extraLabels  }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "apicurio-registry.selectorLabels" . | nindent 6 }}
      {{- with .Values.registry.extraLabels  }}
        {{- toYaml . | nindent 6 }}
      {{- end }}
      app.kubernetes.io/component: registry
  template:
    metadata:
      labels:
        {{- include "apicurio-registry.selectorLabels" . | nindent 8 }}
        {{- with .Values.registry.extraLabels  }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        app.kubernetes.io/component: registry
    spec:
      {{- with .Values.registry.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      serviceAccountName: {{ include "apicurio-registry.name" . }}
      {{- with .Values.registry.initContainers }}
      initContainers:
        {{- toYaml . | nindent 10 }}
      {{- end }}
      containers:
        - name: registry
          image: {{ include "apicurio-registry.image" .Values.registry }}
          {{- with .Values.registry.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: REGISTRY_LOG_LEVEL
              value: INFO
            - name: LOG_LEVEL
              value: INFO
            - name: QUARKUS_PROFILE
              value: prod
            {{- if hasKey .Values.registry "sql" }}
            - name: REGISTRY_DATASOURCE_URL
              value: {{ .Values.registry.sql.url }}
            - name: REGISTRY_DATASOURCE_USERNAME
              value: {{ .Values.registry.sql.username }}
            - name: REGISTRY_DATASOURCE_PASSWORD
              value: {{ .Values.registry.sql.password }}
            {{- end }}
            {{- if hasKey .Values.registry "kafka" }}
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.registry.kafka.bootstrapServers }}
            {{- end }}
            {{- with .Values.registry.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            periodSeconds: 30
            initialDelaySeconds: 15
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            periodSeconds: 20
            initialDelaySeconds: 15
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          {{- with .Values.registry.resources }}
          resources:
            {{ . | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.registry.extraVolumeMounts  }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.registry.extraVolumes  }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
